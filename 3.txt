import random
import re
from sopel import module
from sopel import formatting

"""Frobnication module for Sopel

Includes commands for frobnicating synchronous and asyncronous Werlingford
paradigms. Uses a configurable HPADP endpoint to defalicate user-provided
almication schemata.
"""


def tvaya_maya(text):
    replaces = {"я": "ты",
                "Я": "Ты",
                "мы": "вы",
                "Мы": "Вы",
                "меня": "тебя",
                "Меня": "Тебя",
                "нас": "вас",
                "Нас": "Вас",
                "мне": "тебе",
                "Мне": "Тебе",
                "нам": "вам",
                "Нам": "Вам",
                "мной": "тобой",
                "Мной": "Тобой",
                "мой": "твой",
                "Мой": "Твой",
                "моя": "твоя",
                "Моя": "Твоя",
                "мое": "твое",
                "Мое": "Твое",
                "моё": "твоё",
                "Моё": "Твоё",
                "мои": "твои",
                "Мои": "Твои",
                "моего": "твоего",
                "Моего": "Твоего",
                "моей": "твоей",
                "Моей": "Твоей",
                "моих": "твоих",
                "Моих": "Твоих",
                "моему": "твоему",
                "Моему": "Твоему",
                "мою": "твою",
                "Мою": "Твою",
                "моим": "твоим",
                "Моим": "Твоим",
                "моими": "твоими",
                "Моими": "Твоими",
                "моём": "твоём",
                "Моём": "Твоём",
                "моем": "твоем",
                "Моем": "Твоем",
                "наш": "ваш",
                "Наш": "Ваш",
                "наша": "ваша",
                "Наша": "Ваша",
                "наше": "ваше",
                "Наше": "Ваше",
                "наши": "ваши",
                "Наши": "Ваши",
                "ты": "я",
                "Ты": "Я",
                "вы": "мы",
                "Вы": "Мы",
                "тебя": "меня",
                "Тебя": "Меня",
                "вас": "нас",
                "Вас": "Нас",
                "тебе": "мне",
                "Тебе": "Мне",
                "вам": "нам",
                "Вам": "Нам",
                "тобой": "мной",
                "Тобой": "Мной",
                "твой": "мой",
                "Твой": "Мой",
                "твоя": "моя",
                "Твоя": "Моя",
                "твое": "мое",
                "Твое": "Мое",
                "твоё": "моё",
                "Твоё": "Моё",
                "твои": "мои",
                "Твои": "Мои",
                "твоего": "моего",
                "Твоего": "Моего",
                "твоей": "моей",
                "Твоей": "Моей",
                "твоих": "моих",
                "Твоих": "Моих",
                "твоему": "моему",
                "Твоему": "Моему",
                "твою": "мою",
                "Твою": "Мою",
                "твоим": "моим",
                "Твоим": "Моим",
                "твоими": "моими",
                "Твоими": "Моими",
                "твоём": "моём",
                "Твоём": "Моём",
                "твоем": "моем",
                "Твоем": "Моем",
                "ваш": "наш",
                "Ваш": "Наш",
                "ваша": "наша",
                "Ваша": "Наша",
                "ваше": "наше",
                "Ваше": "Наше",
                "ваши": "наши",
                "Ваши": "Наши"}
    regstr = ''
    for r in replaces.keys():
        regstr = regstr + '|'+'\\b' + r + '\\b'
    regstr = regstr[1:]
    text_replaced = re.sub(regstr, lambda m: replaces.get(m.group(), m.group()), text)
    return text_replaced


@module.rule('Консол(ь|еч)ка, (.*\S.*) ли (.*\S.*)\?$')
def choose_is(bot, trigger, found_match=None):
    match = found_match or trigger
    random.seed()
    bot.memory['last_request'] = re.sub(r'^не ', '', match.group(2))
    answer = match.group(3)
    answer = answer + formatting.CONTROL_NORMAL
    if random.choice([True, False]):
        answer = answer + ' '
        bot.memory['last_answer'] = True
    else:
        answer = answer + ' не '
        bot.memory['last_answer'] = False
    answer = answer + re.sub(r'^не ', '', match.group(2)) + formatting.CONTROL_NORMAL
    answer = answer + '.'
    answer = answer[0].capitalize() + answer[1:]
    bot.say(tvaya_maya(answer))


@module.rule('Консол(ь|еч)ка, а (.*\S.*)\?$')
def choose_is_prev(bot, trigger, found_match=None):
    match = found_match or trigger
    if not bot.memory.contains('last_request'):
        bot.say('Хуй на!')
    else:
        part_one = match.group(2) + formatting.CONTROL_NORMAL
        part_two = bot.memory['last_request'] + formatting.CONTROL_NORMAL
        answer = part_two + '!'
        random.seed()
        if random.choice([True, False]):
            if bot.memory['last_answer']:
                answer = 'И ' + part_one + ' тоже ' + answer
            else:
                answer = 'А ' + part_one + ' ' + answer
            bot.say(tvaya_maya(answer))
            bot.memory['last_answer'] = True
        else:
            if bot.memory['last_answer']:
                answer = 'А ' + part_one + ' не ' + answer
            else:
                answer = 'И ' + part_one + ' тоже не ' + answer
            bot.say(tvaya_maya(answer))
            bot.memory['last_answer'] = False


@module.rule('Консол(ь|еч)ка, (.*\S.*) или (.*\S.*)\?$')
def choose_or(bot, trigger, found_match=None):
    match = found_match or trigger
    random.seed()
    bot.memory['last_answer'] = True
    choice = match.group(random.randint(2, 3))
    bot.memory['last_request'] = choice
    bot.say(random.choice(['Я считаю, ', 'Мне кажется, ', 'Конечно же ']) +
            tvaya_maya(choice) +
            formatting.CONTROL_NORMAL +
            '.')

